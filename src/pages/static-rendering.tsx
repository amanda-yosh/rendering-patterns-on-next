import Head from "next/head";
import Image from "next/image";

import Resume from "@/components/Resume";
import Title from "@/components/Title";
import Alert from "@/components/Alert";

import img2 from '@/assets/static-rendering/img2.png'
import img3 from '@/assets/static-rendering/img3.png'

import styles from "@/styles/StaticRendering.module.css";

export default function StaticRendering() {
    return (
        <>
            <Head>
                <title>Renderização Estárica | Static Rendering</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className={styles.page}>
                <main className={styles.main}>
                    <Title borderBlack>Esta é uma página que renderiza de forma estática</Title>

                    <section className={styles.section}>
                        <p>
                            A renderização estática é um pattern usado para criar sites rápidos com carregamentos de página quase instantâneos e pouco ou nenhum conteúdo dinâmico.
                            <br />
                            O <span className={styles.focus}>HTML é gerado no momento do build</span> e não muda até o próximo build.
                            <br />
                            O conteúdo HTML é estático e <span className={styles.focus}>facilmente armazenável em cache (CDN ou uma rede Edge)</span>.
                            <br />
                            Quando um cliente solicita uma página, uma requisição é enviada para o servidor, que a processa, renderiza o conteúdo HTML e responde esta solicitação. Entre o servidor e o cliente, uma CDN pode ser usada para armazenar em cache o conteúdo HTML. Esta configuração reduz o tempo de resposta e o tempo de carregamento da página, pois o servidor não precisa (re)processar a requisição.
                            <br />
                        </p>

                        <Alert>
                            <p>
                                <span className={styles.focus}>INDICADO PARA</span> páginas que não mudam com frequência e exibem os mesmos dados, não importa quem os solicite.
                            </p>
                        </Alert>
                    </section>

                    <section className={styles.section}>
                        <p>
                            A grande maioria dos sites hoje possuem conteúdos dinâmicos e personalizados, dessa forma, precisamos de variações na forma como é feita a renderização estática para atender os diferentes casos de uso. Estas incluem:
                        </p>

                        <div className={styles.card}>
                            <p>Renderização estática</p>
                            <ul>
                                <li>Melhor para páginas que não precisam fazer requisição de dados</li>
                            </ul>
                        </div>

                        <div className={styles.card}>
                            <p>Renderização estática com Fetch do lado do cliente</p>
                            <ul>
                                <li>Melhor para páginas que contêm dados que devem ser atualizados em cada carregamento de página;</li>
                                <li>Melhor para páginas que contêm componentes de espaço reservado estáveis.</li>
                            </ul>
                        </div>

                        {/* Regeneração estática incremental */}
                        {/* - Melhor para páginas que devem ser geradas em um determinado intervalo ou sob demanda */}
                        {/* - E se você tiver muitas páginas para pré-renderizar */}

                        {/* Regeneração estática incremental sob demanda */}
                        {/* - Melhor para páginas que devem ser regeneradas com base em determinados eventos */}
                    </section>

                    <section className={styles.section}>
                        <h2>Como funciona?</h2>
                        <p>
                            Esta página (que você está lendo) exibe o mesmo conteúdo para todos no mundo. Ela não contém dados dinâmicos ou conteúdo personalizado.
                            <br />
                            Quando o site é buildado em um host, o HTML é gerado e salvo no armazenamento estático no servidor.
                            <br />
                            Quando um usuário solicita a página, o servidor envia o HTML pré-gerado para o cliente e o armazenada em cache no ponto de borda mais próxima do usuário. O navegador então renderiza o HTML e emprega um pacote JavaScript para hidratar a página.
                        </p>
                    </section>

                    <Image
                        src={img2}
                        alt=""
                        width={600}
                        height={380}
                        priority
                    />

                    <Image
                        src={img3}
                        alt=""
                        width={600}
                        height={380}
                        priority
                    />

                    <p>
                        A renderização estática simples é excelente para desempenho porque resulta em um TTFB extremamente rápido, já que o HTML já está disponível no servidor. O navegador recebe uma resposta mais rápida e pode renderizá-lo rapidamente, resultando em um FCP e LCP rápidos. Como o conteúdo é estático, não há mudança de layout durante a renderização.
                    </p>

                    <Resume
                        title='Renderização Estática'
                        qualifications={[
                            { name: 'Time To First Byte', score: 'good' },
                            { name: 'First Contentful Paint', score: 'good' },
                            { name: 'Largest Contentful Paint', score: 'good' },
                            { name: 'Time To Interactive', score: 'good' },
                            { name: 'Cumulative Layout Shift', score: 'good' },
                            { name: 'First Input Delay', score: 'good' },
                            { name: 'Fast Build Times', score: 'good' },
                            { name: 'Low Server Costs', score: 'good' },
                            { name: 'Easy Rollbacks', score: 'good' },
                            { name: 'Reliable uptime', score: 'good' },
                            { name: 'Dynamic Content', score: 'warn' },
                            { name: 'Scalable infraestructure', score: 'good' },
                        ]}
                    />

                    <p>
                        Esta forma de renderização, em conjunto com uma CDN para cache, ajuda a atingir excelentes valores de Core Web Vitals quando o site não precisa de conteúdo dinâmico ou interação do usuário.
                    </p>
                </main>
            </div>
        </>
    );
}
