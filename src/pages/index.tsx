import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import Title from "@/components/Title";

import questionGirl from '@/assets/home/question-girl.jpeg';
import browserRender from '@/assets/home/how-browsers-render-web-pages.png'

import { routes } from "@/utils/routes";

import pagesStyles from '@/styles/Pages.module.css'
import styles from "@/styles/Home.module.css";

export default function Home() {
  return (
    <>
      <Head>
        <title>Padrões de Renderização | Rendering Patterns</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={pagesStyles.page}>
        <main className={pagesStyles.main}>
          <Title borderBlack>Padrões de Renderização | Rendering Patterns</Title>

          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '8px' }}>
            <Image
              aria-hidden
              src={questionGirl}
              alt="File icon"
              width={180}
              height={180}
            />
            <h2 style={{ lineHeight: '2rem' }}>
              Onde & <br />
              Quando o conteúdo deve ser renderizado?
            </h2>
          </div>

          <section className={pagesStyles.section}>
            <p>
              Durante o desenvolvimento web, um questionamento crucial é: &quot;Onde e quando o conteúdo deve ser renderizado&quot;
              <br />
              As opções — servidor, build ou cliente — influenciam a performance e a experiência do usuário, e a renderização pode ser feita de uma vez, em partes ou progressivamente.
            </p>

            <p>
              A escolha vai depender do caso de uso e irá pesar tanto para o time de desenvolvimento, que utilizará as ferramentas de engenharia para construir a aplicação, quanto para o usuário final, que terá a experiência de utilizar a aplicação.
            </p>

            <p>
              A escolha correta para cada caso de uso pode levar a builds mais rápidos e uma melhor performance a um baixo custo de processamento. Entretanto, a escolha errada pode matar uma aplicação.
            </p>

            <p>
              Aqui, o objetivo é entender os padrões de renderização para colocá-los em desenvolvimento da forma mais certeira possível. Utilizaremos uma aplicação em Next.js para entender e colocar em prática estes padrões.
            </p>

            <p>
              Mas antes de prosseguir, vamos entender ou relembrar como é feita a renderização de uma página web e o que são CDNs e bordas.
            </p>

          </section>

          <section className={pagesStyles.section}>
            <h2>Como navegadores renderizam páginas web</h2>

            <Image
              aria-hidden
              src={browserRender}
              alt=""
              width={660}
              height={300}
            />
          </section>

          <section className={pagesStyles.section}>
            <h2>O que é e como funciona uma CDN</h2>

          </section>

          <section className={pagesStyles.section}>
            <h2 style={{ border: '2px solid #000', padding: '12px' }}>Padrões de Renderização</h2>

            <div className={styles.ctas}>
              {routes.map(({ href, name }) => (
                <Link href={href} className={styles.ctaLink} key={name}>
                  <Image
                    aria-hidden
                    src="https://nextjs.org/icons/file.svg"
                    alt="File icon"
                    width={16}
                    height={16}
                  />
                  {name}
                </Link>
              ))}
            </div>
          </section>
        </main>
      </div>
    </>
  );
}
